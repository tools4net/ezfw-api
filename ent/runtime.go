// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/tools4net/ezfw/backend/ent/agenttoken"
	"github.com/tools4net/ezfw/backend/ent/haproxyconfig"
	"github.com/tools4net/ezfw/backend/ent/node"
	"github.com/tools4net/ezfw/backend/ent/schema"
	"github.com/tools4net/ezfw/backend/ent/serviceinstance"
	"github.com/tools4net/ezfw/backend/ent/singboxconfig"
	"github.com/tools4net/ezfw/backend/ent/xrayconfig"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	agenttokenFields := schema.AgentToken{}.Fields()
	_ = agenttokenFields
	// agenttokenDescNodeID is the schema descriptor for node_id field.
	agenttokenDescNodeID := agenttokenFields[1].Descriptor()
	// agenttoken.NodeIDValidator is a validator for the "node_id" field. It is called by the builders before save.
	agenttoken.NodeIDValidator = agenttokenDescNodeID.Validators[0].(func(string) error)
	// agenttokenDescToken is the schema descriptor for token field.
	agenttokenDescToken := agenttokenFields[2].Descriptor()
	// agenttoken.TokenValidator is a validator for the "token" field. It is called by the builders before save.
	agenttoken.TokenValidator = agenttokenDescToken.Validators[0].(func(string) error)
	// agenttokenDescName is the schema descriptor for name field.
	agenttokenDescName := agenttokenFields[3].Descriptor()
	// agenttoken.NameValidator is a validator for the "name" field. It is called by the builders before save.
	agenttoken.NameValidator = agenttokenDescName.Validators[0].(func(string) error)
	// agenttokenDescStatus is the schema descriptor for status field.
	agenttokenDescStatus := agenttokenFields[4].Descriptor()
	// agenttoken.DefaultStatus holds the default value on creation for the status field.
	agenttoken.DefaultStatus = agenttokenDescStatus.Default.(string)
	// agenttokenDescCreatedAt is the schema descriptor for created_at field.
	agenttokenDescCreatedAt := agenttokenFields[6].Descriptor()
	// agenttoken.DefaultCreatedAt holds the default value on creation for the created_at field.
	agenttoken.DefaultCreatedAt = agenttokenDescCreatedAt.Default.(func() time.Time)
	// agenttokenDescUpdatedAt is the schema descriptor for updated_at field.
	agenttokenDescUpdatedAt := agenttokenFields[7].Descriptor()
	// agenttoken.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	agenttoken.DefaultUpdatedAt = agenttokenDescUpdatedAt.Default.(func() time.Time)
	// agenttoken.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	agenttoken.UpdateDefaultUpdatedAt = agenttokenDescUpdatedAt.UpdateDefault.(func() time.Time)
	haproxyconfigFields := schema.HAProxyConfig{}.Fields()
	_ = haproxyconfigFields
	// haproxyconfigDescName is the schema descriptor for name field.
	haproxyconfigDescName := haproxyconfigFields[1].Descriptor()
	// haproxyconfig.NameValidator is a validator for the "name" field. It is called by the builders before save.
	haproxyconfig.NameValidator = haproxyconfigDescName.Validators[0].(func(string) error)
	// haproxyconfigDescCreatedAt is the schema descriptor for created_at field.
	haproxyconfigDescCreatedAt := haproxyconfigFields[3].Descriptor()
	// haproxyconfig.DefaultCreatedAt holds the default value on creation for the created_at field.
	haproxyconfig.DefaultCreatedAt = haproxyconfigDescCreatedAt.Default.(func() time.Time)
	// haproxyconfigDescUpdatedAt is the schema descriptor for updated_at field.
	haproxyconfigDescUpdatedAt := haproxyconfigFields[4].Descriptor()
	// haproxyconfig.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	haproxyconfig.DefaultUpdatedAt = haproxyconfigDescUpdatedAt.Default.(func() time.Time)
	// haproxyconfig.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	haproxyconfig.UpdateDefaultUpdatedAt = haproxyconfigDescUpdatedAt.UpdateDefault.(func() time.Time)
	nodeFields := schema.Node{}.Fields()
	_ = nodeFields
	// nodeDescName is the schema descriptor for name field.
	nodeDescName := nodeFields[1].Descriptor()
	// node.NameValidator is a validator for the "name" field. It is called by the builders before save.
	node.NameValidator = nodeDescName.Validators[0].(func(string) error)
	// nodeDescHostname is the schema descriptor for hostname field.
	nodeDescHostname := nodeFields[3].Descriptor()
	// node.HostnameValidator is a validator for the "hostname" field. It is called by the builders before save.
	node.HostnameValidator = nodeDescHostname.Validators[0].(func(string) error)
	// nodeDescIPAddress is the schema descriptor for ip_address field.
	nodeDescIPAddress := nodeFields[4].Descriptor()
	// node.IPAddressValidator is a validator for the "ip_address" field. It is called by the builders before save.
	node.IPAddressValidator = nodeDescIPAddress.Validators[0].(func(string) error)
	// nodeDescPort is the schema descriptor for port field.
	nodeDescPort := nodeFields[5].Descriptor()
	// node.PortValidator is a validator for the "port" field. It is called by the builders before save.
	node.PortValidator = nodeDescPort.Validators[0].(func(int) error)
	// nodeDescStatus is the schema descriptor for status field.
	nodeDescStatus := nodeFields[6].Descriptor()
	// node.DefaultStatus holds the default value on creation for the status field.
	node.DefaultStatus = nodeDescStatus.Default.(string)
	// nodeDescCreatedAt is the schema descriptor for created_at field.
	nodeDescCreatedAt := nodeFields[10].Descriptor()
	// node.DefaultCreatedAt holds the default value on creation for the created_at field.
	node.DefaultCreatedAt = nodeDescCreatedAt.Default.(func() time.Time)
	// nodeDescUpdatedAt is the schema descriptor for updated_at field.
	nodeDescUpdatedAt := nodeFields[11].Descriptor()
	// node.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	node.DefaultUpdatedAt = nodeDescUpdatedAt.Default.(func() time.Time)
	// node.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	node.UpdateDefaultUpdatedAt = nodeDescUpdatedAt.UpdateDefault.(func() time.Time)
	serviceinstanceFields := schema.ServiceInstance{}.Fields()
	_ = serviceinstanceFields
	// serviceinstanceDescNodeID is the schema descriptor for node_id field.
	serviceinstanceDescNodeID := serviceinstanceFields[1].Descriptor()
	// serviceinstance.NodeIDValidator is a validator for the "node_id" field. It is called by the builders before save.
	serviceinstance.NodeIDValidator = serviceinstanceDescNodeID.Validators[0].(func(string) error)
	// serviceinstanceDescName is the schema descriptor for name field.
	serviceinstanceDescName := serviceinstanceFields[2].Descriptor()
	// serviceinstance.NameValidator is a validator for the "name" field. It is called by the builders before save.
	serviceinstance.NameValidator = serviceinstanceDescName.Validators[0].(func(string) error)
	// serviceinstanceDescServiceType is the schema descriptor for service_type field.
	serviceinstanceDescServiceType := serviceinstanceFields[4].Descriptor()
	// serviceinstance.ServiceTypeValidator is a validator for the "service_type" field. It is called by the builders before save.
	serviceinstance.ServiceTypeValidator = serviceinstanceDescServiceType.Validators[0].(func(string) error)
	// serviceinstanceDescStatus is the schema descriptor for status field.
	serviceinstanceDescStatus := serviceinstanceFields[5].Descriptor()
	// serviceinstance.DefaultStatus holds the default value on creation for the status field.
	serviceinstance.DefaultStatus = serviceinstanceDescStatus.Default.(string)
	// serviceinstanceDescPort is the schema descriptor for port field.
	serviceinstanceDescPort := serviceinstanceFields[6].Descriptor()
	// serviceinstance.PortValidator is a validator for the "port" field. It is called by the builders before save.
	serviceinstance.PortValidator = serviceinstanceDescPort.Validators[0].(func(int) error)
	// serviceinstanceDescProtocol is the schema descriptor for protocol field.
	serviceinstanceDescProtocol := serviceinstanceFields[7].Descriptor()
	// serviceinstance.ProtocolValidator is a validator for the "protocol" field. It is called by the builders before save.
	serviceinstance.ProtocolValidator = serviceinstanceDescProtocol.Validators[0].(func(string) error)
	// serviceinstanceDescCreatedAt is the schema descriptor for created_at field.
	serviceinstanceDescCreatedAt := serviceinstanceFields[10].Descriptor()
	// serviceinstance.DefaultCreatedAt holds the default value on creation for the created_at field.
	serviceinstance.DefaultCreatedAt = serviceinstanceDescCreatedAt.Default.(func() time.Time)
	// serviceinstanceDescUpdatedAt is the schema descriptor for updated_at field.
	serviceinstanceDescUpdatedAt := serviceinstanceFields[11].Descriptor()
	// serviceinstance.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	serviceinstance.DefaultUpdatedAt = serviceinstanceDescUpdatedAt.Default.(func() time.Time)
	// serviceinstance.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	serviceinstance.UpdateDefaultUpdatedAt = serviceinstanceDescUpdatedAt.UpdateDefault.(func() time.Time)
	singboxconfigFields := schema.SingBoxConfig{}.Fields()
	_ = singboxconfigFields
	// singboxconfigDescName is the schema descriptor for name field.
	singboxconfigDescName := singboxconfigFields[1].Descriptor()
	// singboxconfig.NameValidator is a validator for the "name" field. It is called by the builders before save.
	singboxconfig.NameValidator = singboxconfigDescName.Validators[0].(func(string) error)
	// singboxconfigDescCreatedAt is the schema descriptor for created_at field.
	singboxconfigDescCreatedAt := singboxconfigFields[3].Descriptor()
	// singboxconfig.DefaultCreatedAt holds the default value on creation for the created_at field.
	singboxconfig.DefaultCreatedAt = singboxconfigDescCreatedAt.Default.(func() time.Time)
	// singboxconfigDescUpdatedAt is the schema descriptor for updated_at field.
	singboxconfigDescUpdatedAt := singboxconfigFields[4].Descriptor()
	// singboxconfig.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	singboxconfig.DefaultUpdatedAt = singboxconfigDescUpdatedAt.Default.(func() time.Time)
	// singboxconfig.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	singboxconfig.UpdateDefaultUpdatedAt = singboxconfigDescUpdatedAt.UpdateDefault.(func() time.Time)
	xrayconfigFields := schema.XrayConfig{}.Fields()
	_ = xrayconfigFields
	// xrayconfigDescName is the schema descriptor for name field.
	xrayconfigDescName := xrayconfigFields[1].Descriptor()
	// xrayconfig.NameValidator is a validator for the "name" field. It is called by the builders before save.
	xrayconfig.NameValidator = xrayconfigDescName.Validators[0].(func(string) error)
	// xrayconfigDescCreatedAt is the schema descriptor for created_at field.
	xrayconfigDescCreatedAt := xrayconfigFields[3].Descriptor()
	// xrayconfig.DefaultCreatedAt holds the default value on creation for the created_at field.
	xrayconfig.DefaultCreatedAt = xrayconfigDescCreatedAt.Default.(func() time.Time)
	// xrayconfigDescUpdatedAt is the schema descriptor for updated_at field.
	xrayconfigDescUpdatedAt := xrayconfigFields[4].Descriptor()
	// xrayconfig.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	xrayconfig.DefaultUpdatedAt = xrayconfigDescUpdatedAt.Default.(func() time.Time)
	// xrayconfig.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	xrayconfig.UpdateDefaultUpdatedAt = xrayconfigDescUpdatedAt.UpdateDefault.(func() time.Time)
}
