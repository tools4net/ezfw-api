// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AgentTokensColumns holds the columns for the "agent_tokens" table.
	AgentTokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "token", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "status", Type: field.TypeString, Default: "active"},
		{Name: "expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "last_used", Type: field.TypeTime, Nullable: true},
		{Name: "node_id", Type: field.TypeString},
	}
	// AgentTokensTable holds the schema information for the "agent_tokens" table.
	AgentTokensTable = &schema.Table{
		Name:       "agent_tokens",
		Columns:    AgentTokensColumns,
		PrimaryKey: []*schema.Column{AgentTokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "agent_tokens_nodes_agent_tokens",
				Columns:    []*schema.Column{AgentTokensColumns[8]},
				RefColumns: []*schema.Column{NodesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "agenttoken_token",
				Unique:  true,
				Columns: []*schema.Column{AgentTokensColumns[1]},
			},
			{
				Name:    "agenttoken_node_id",
				Unique:  false,
				Columns: []*schema.Column{AgentTokensColumns[8]},
			},
			{
				Name:    "agenttoken_status",
				Unique:  false,
				Columns: []*schema.Column{AgentTokensColumns[3]},
			},
			{
				Name:    "agenttoken_created_at",
				Unique:  false,
				Columns: []*schema.Column{AgentTokensColumns[5]},
			},
			{
				Name:    "agenttoken_expires_at",
				Unique:  false,
				Columns: []*schema.Column{AgentTokensColumns[4]},
			},
		},
	}
	// HaProxyConfigsColumns holds the columns for the "ha_proxy_configs" table.
	HaProxyConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "global_config", Type: field.TypeJSON, Nullable: true},
		{Name: "defaults_config", Type: field.TypeJSON, Nullable: true},
		{Name: "frontends", Type: field.TypeJSON, Nullable: true},
		{Name: "backends", Type: field.TypeJSON, Nullable: true},
		{Name: "listens", Type: field.TypeJSON, Nullable: true},
		{Name: "stats_config", Type: field.TypeJSON, Nullable: true},
	}
	// HaProxyConfigsTable holds the schema information for the "ha_proxy_configs" table.
	HaProxyConfigsTable = &schema.Table{
		Name:       "ha_proxy_configs",
		Columns:    HaProxyConfigsColumns,
		PrimaryKey: []*schema.Column{HaProxyConfigsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "haproxyconfig_name",
				Unique:  true,
				Columns: []*schema.Column{HaProxyConfigsColumns[1]},
			},
			{
				Name:    "haproxyconfig_created_at",
				Unique:  false,
				Columns: []*schema.Column{HaProxyConfigsColumns[3]},
			},
		},
	}
	// NodesColumns holds the columns for the "nodes" table.
	NodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "hostname", Type: field.TypeString},
		{Name: "ip_address", Type: field.TypeString},
		{Name: "port", Type: field.TypeInt},
		{Name: "status", Type: field.TypeString, Default: "inactive"},
		{Name: "os_info", Type: field.TypeJSON, Nullable: true},
		{Name: "agent_info", Type: field.TypeJSON, Nullable: true},
		{Name: "tags", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "last_seen", Type: field.TypeTime, Nullable: true},
	}
	// NodesTable holds the schema information for the "nodes" table.
	NodesTable = &schema.Table{
		Name:       "nodes",
		Columns:    NodesColumns,
		PrimaryKey: []*schema.Column{NodesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "node_name",
				Unique:  true,
				Columns: []*schema.Column{NodesColumns[1]},
			},
			{
				Name:    "node_hostname",
				Unique:  false,
				Columns: []*schema.Column{NodesColumns[3]},
			},
			{
				Name:    "node_status",
				Unique:  false,
				Columns: []*schema.Column{NodesColumns[6]},
			},
			{
				Name:    "node_created_at",
				Unique:  false,
				Columns: []*schema.Column{NodesColumns[10]},
			},
			{
				Name:    "node_last_seen",
				Unique:  false,
				Columns: []*schema.Column{NodesColumns[12]},
			},
		},
	}
	// ServiceInstancesColumns holds the columns for the "service_instances" table.
	ServiceInstancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "service_type", Type: field.TypeString},
		{Name: "status", Type: field.TypeString, Default: "stopped"},
		{Name: "port", Type: field.TypeInt},
		{Name: "protocol", Type: field.TypeString},
		{Name: "config", Type: field.TypeJSON, Nullable: true},
		{Name: "tags", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "last_seen", Type: field.TypeTime, Nullable: true},
		{Name: "node_id", Type: field.TypeString},
	}
	// ServiceInstancesTable holds the schema information for the "service_instances" table.
	ServiceInstancesTable = &schema.Table{
		Name:       "service_instances",
		Columns:    ServiceInstancesColumns,
		PrimaryKey: []*schema.Column{ServiceInstancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "service_instances_nodes_service_instances",
				Columns:    []*schema.Column{ServiceInstancesColumns[12]},
				RefColumns: []*schema.Column{NodesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "serviceinstance_node_id",
				Unique:  false,
				Columns: []*schema.Column{ServiceInstancesColumns[12]},
			},
			{
				Name:    "serviceinstance_service_type",
				Unique:  false,
				Columns: []*schema.Column{ServiceInstancesColumns[3]},
			},
			{
				Name:    "serviceinstance_status",
				Unique:  false,
				Columns: []*schema.Column{ServiceInstancesColumns[4]},
			},
			{
				Name:    "serviceinstance_port",
				Unique:  false,
				Columns: []*schema.Column{ServiceInstancesColumns[5]},
			},
			{
				Name:    "serviceinstance_created_at",
				Unique:  false,
				Columns: []*schema.Column{ServiceInstancesColumns[9]},
			},
			{
				Name:    "serviceinstance_last_seen",
				Unique:  false,
				Columns: []*schema.Column{ServiceInstancesColumns[11]},
			},
			{
				Name:    "serviceinstance_node_id_name",
				Unique:  true,
				Columns: []*schema.Column{ServiceInstancesColumns[12], ServiceInstancesColumns[1]},
			},
		},
	}
	// SingBoxConfigsColumns holds the columns for the "sing_box_configs" table.
	SingBoxConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "log_config", Type: field.TypeJSON, Nullable: true},
		{Name: "dns_config", Type: field.TypeJSON, Nullable: true},
		{Name: "ntp_config", Type: field.TypeJSON, Nullable: true},
		{Name: "inbounds", Type: field.TypeJSON, Nullable: true},
		{Name: "outbounds", Type: field.TypeJSON, Nullable: true},
		{Name: "route_config", Type: field.TypeJSON, Nullable: true},
		{Name: "experimental_config", Type: field.TypeJSON, Nullable: true},
		{Name: "endpoints", Type: field.TypeJSON, Nullable: true},
		{Name: "certificate_config", Type: field.TypeJSON, Nullable: true},
	}
	// SingBoxConfigsTable holds the schema information for the "sing_box_configs" table.
	SingBoxConfigsTable = &schema.Table{
		Name:       "sing_box_configs",
		Columns:    SingBoxConfigsColumns,
		PrimaryKey: []*schema.Column{SingBoxConfigsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "singboxconfig_name",
				Unique:  true,
				Columns: []*schema.Column{SingBoxConfigsColumns[1]},
			},
			{
				Name:    "singboxconfig_created_at",
				Unique:  false,
				Columns: []*schema.Column{SingBoxConfigsColumns[3]},
			},
		},
	}
	// XrayConfigsColumns holds the columns for the "xray_configs" table.
	XrayConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "log", Type: field.TypeJSON, Nullable: true},
		{Name: "api", Type: field.TypeJSON, Nullable: true},
		{Name: "dns", Type: field.TypeJSON, Nullable: true},
		{Name: "routing", Type: field.TypeJSON, Nullable: true},
		{Name: "policy", Type: field.TypeJSON, Nullable: true},
		{Name: "inbounds", Type: field.TypeJSON, Nullable: true},
		{Name: "outbounds", Type: field.TypeJSON, Nullable: true},
		{Name: "transport", Type: field.TypeJSON, Nullable: true},
		{Name: "stats", Type: field.TypeJSON, Nullable: true},
		{Name: "reverse", Type: field.TypeJSON, Nullable: true},
		{Name: "fakedns", Type: field.TypeJSON, Nullable: true},
		{Name: "metrics", Type: field.TypeJSON, Nullable: true},
		{Name: "observatory", Type: field.TypeJSON, Nullable: true},
		{Name: "burst_observatory", Type: field.TypeJSON, Nullable: true},
		{Name: "services", Type: field.TypeJSON, Nullable: true},
	}
	// XrayConfigsTable holds the schema information for the "xray_configs" table.
	XrayConfigsTable = &schema.Table{
		Name:       "xray_configs",
		Columns:    XrayConfigsColumns,
		PrimaryKey: []*schema.Column{XrayConfigsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "xrayconfig_name",
				Unique:  true,
				Columns: []*schema.Column{XrayConfigsColumns[1]},
			},
			{
				Name:    "xrayconfig_created_at",
				Unique:  false,
				Columns: []*schema.Column{XrayConfigsColumns[3]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AgentTokensTable,
		HaProxyConfigsTable,
		NodesTable,
		ServiceInstancesTable,
		SingBoxConfigsTable,
		XrayConfigsTable,
	}
)

func init() {
	AgentTokensTable.ForeignKeys[0].RefTable = NodesTable
	ServiceInstancesTable.ForeignKeys[0].RefTable = NodesTable
}
