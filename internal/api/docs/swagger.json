{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for managing EZFW (Easy Firewall/Proxy) configurations for Xray and Sing-box.",
        "title": "EZFW API",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/tools4net/ezfw/issues",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/configs/singbox": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a paginated list of SingBox configurations.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigsSingBox"
                ],
                "summary": "List SingBox Configs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "example": 10,
                        "description": "Number of items to return per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "example": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of SingBox configurations",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxConfig"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to list configurations",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a new SingBox configuration to the store.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigsSingBox"
                ],
                "summary": "Create SingBox Config",
                "parameters": [
                    {
                        "description": "SingBox Configuration Object",
                        "name": "singBoxConfig",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxConfig"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created SingBox configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input or missing name",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to create configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/configs/singbox/{configId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches a single SingBox configuration based on its unique ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigsSingBox"
                ],
                "summary": "Get SingBox Config by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SingBox Configuration ID",
                        "name": "configId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved SingBox configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid or missing configuration ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Configuration not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to retrieve configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Modifies an existing SingBox configuration by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigsSingBox"
                ],
                "summary": "Update SingBox Config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SingBox Configuration ID",
                        "name": "configId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "SingBox Configuration Object",
                        "name": "singBoxConfig",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated SingBox configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input, missing ID, or missing name",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Configuration not found for update",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to update configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a specific SingBox configuration by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigsSingBox"
                ],
                "summary": "Delete SingBox Config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SingBox Configuration ID",
                        "name": "configId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid or missing configuration ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Configuration not found for deletion",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to delete configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/configs/singbox/{configId}/generate": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a SingBox configuration and returns it in a format suitable for the sing-box binary, stripping internal metadata.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigsSingBox"
                ],
                "summary": "Generate SingBox Config File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SingBox Configuration ID",
                        "name": "configId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The core SingBox configuration JSON. The actual structure depends on the config (models.SingBoxConfig without metadata).",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid or missing configuration ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Configuration not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to retrieve configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/configs/xray": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a paginated list of Xray configurations.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigsXray"
                ],
                "summary": "List Xray Configs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "example": 10,
                        "description": "Number of items to return per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "example": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of Xray configurations",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.XrayConfig"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to list configurations",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Adds a new Xray configuration to the store. Name must be unique.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigsXray"
                ],
                "summary": "Create Xray Config",
                "parameters": [
                    {
                        "description": "Xray Configuration Object",
                        "name": "xrayConfig",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.XrayConfig"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created Xray configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.XrayConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input or missing name",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict - Configuration name already exists",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to create configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/configs/xray/{configId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetches a single Xray configuration based on its unique ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigsXray"
                ],
                "summary": "Get Xray Config by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Xray Configuration ID",
                        "name": "configId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved Xray configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.XrayConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid or missing configuration ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Configuration not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to retrieve configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Modifies an existing Xray configuration by its ID. Name must be unique among Xray configs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigsXray"
                ],
                "summary": "Update Xray Config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Xray Configuration ID",
                        "name": "configId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Xray Configuration Object",
                        "name": "xrayConfig",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.XrayConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated Xray configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.XrayConfig"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input, missing ID, or missing name",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Configuration not found for update",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict - Configuration name already exists for another configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to update configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deletes a specific Xray configuration by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigsXray"
                ],
                "summary": "Delete Xray Config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Xray Configuration ID",
                        "name": "configId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid or missing configuration ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Configuration not found for deletion",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to delete configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/configs/xray/{configId}/generate": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves an Xray configuration and returns it in a format suitable for the Xray-core binary, stripping internal metadata.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ConfigsXray"
                ],
                "summary": "Generate Xray Config File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Xray Configuration ID",
                        "name": "configId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The core Xray configuration JSON. The actual structure depends on the config (models.XrayConfig without metadata).",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid or missing configuration ID",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - Configuration not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - Failed to retrieve configuration",
                        "schema": {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_tools4net_ezfw_backend_internal_models.APIObject": {
            "type": "object",
            "properties": {
                "listen": {
                    "description": "Address to listen on for gRPC (optional)",
                    "type": "string"
                },
                "services": {
                    "description": "List of API services to enable, e.g., \"HandlerService\", \"StatsService\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tag": {
                    "description": "Tag for routing requests to this API",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.AllocateObject": {
            "type": "object",
            "properties": {
                "concurrency": {
                    "description": "Default 3",
                    "type": "integer"
                },
                "refresh": {
                    "description": "In minutes, default 5",
                    "type": "integer"
                },
                "strategy": {
                    "description": "\"always\" or \"random\", default \"always\"",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.Balancer": {
            "type": "object",
            "properties": {
                "selector": {
                    "description": "Selects outbounds by tag pattern",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "strategy": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.BalancerStrategyObject"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.BalancerStrategyObject": {
            "type": "object",
            "properties": {
                "settings": {
                    "description": "Specific settings for the strategy, e.g., for leastPing: {\"observerTag\": \"tag\", \"expected\": [\"ip\"], \"maxDeviation\": 100, \"tolerance\": 1.5}",
                    "type": "object",
                    "additionalProperties": true
                },
                "type": {
                    "description": "\"random\", \"leastPing\"",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.Bridge": {
            "type": "object",
            "properties": {
                "domain": {
                    "description": "Required",
                    "type": "string"
                },
                "tag": {
                    "description": "Required",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.BurstObservatoryObject": {
            "type": "object",
            "properties": {
                "probeInterval": {
                    "type": "string"
                },
                "probeURL": {
                    "type": "string"
                },
                "subjectSelector": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.Certificate": {
            "type": "object",
            "properties": {
                "certificate": {
                    "description": "Certificate content as string array (PEM format)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "certificateFile": {
                    "type": "string"
                },
                "key": {
                    "description": "Key content as string array (PEM format)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "keyFile": {
                    "type": "string"
                },
                "ocspStapling": {
                    "description": "Refresh interval in seconds, default 3600",
                    "type": "integer"
                },
                "oneTimeLoading": {
                    "description": "New, default false",
                    "type": "boolean"
                },
                "usage": {
                    "description": "\"encipherment\", \"verify\", \"issue\", \"ignored\" (new)",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.DNSObject": {
            "type": "object",
            "properties": {
                "clientIp": {
                    "description": "Client IP for EDNS",
                    "type": "string"
                },
                "disableCache": {
                    "type": "boolean"
                },
                "disableFallback": {
                    "type": "boolean"
                },
                "disableFallbackIfMatch": {
                    "description": "New name for former `disableFeature`",
                    "type": "boolean"
                },
                "hosts": {
                    "description": "Static host mappings. Value can be string IP, []string IPs, or Address object ({\"address\": \"ip\"})",
                    "type": "object",
                    "additionalProperties": true
                },
                "queryStrategy": {
                    "description": "\"UseIP\", \"UseIPv4\", \"UseIPv6\"",
                    "type": "string"
                },
                "servers": {
                    "description": "List of DNS servers. Can be string (IP or \"localhost\") or DnsServerObject.",
                    "type": "array",
                    "items": {}
                },
                "tag": {
                    "description": "Tag for routing DNS queries through a specific outbound",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.DomainSocketSettings": {
            "type": "object",
            "properties": {
                "abstract": {
                    "description": "Default false, Linux only",
                    "type": "boolean"
                },
                "padding": {
                    "description": "Default false, Linux abstract only",
                    "type": "boolean"
                },
                "path": {
                    "description": "Required",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Detailed error message"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.FakeDNSObject": {
            "type": "object",
            "properties": {
                "ipPool": {
                    "description": "CIDR format, e.g., \"198.18.0.0/15\", Required",
                    "type": "string"
                },
                "poolSize": {
                    "description": "Default 65535",
                    "type": "integer"
                },
                "udpExtra": {
                    "description": "Deprecated: \"disable\"",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.GRPCSettings": {
            "type": "object",
            "properties": {
                "health_check_timeout": {
                    "description": "Seconds",
                    "type": "integer"
                },
                "idle_timeout": {
                    "description": "Seconds",
                    "type": "integer"
                },
                "initial_windows_size": {
                    "description": "Bytes",
                    "type": "integer"
                },
                "multiMode": {
                    "description": "Default false",
                    "type": "boolean"
                },
                "permit_without_stream": {
                    "description": "Default false",
                    "type": "boolean"
                },
                "serviceName": {
                    "type": "string"
                },
                "user_agent": {
                    "description": "New",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.HTTP2Settings": {
            "type": "object",
            "properties": {
                "healthCheckTimeout": {
                    "description": "New",
                    "type": "integer"
                },
                "host": {
                    "description": "List of domains",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "method": {
                    "description": "New, default \"PUT\"",
                    "type": "string"
                },
                "path": {
                    "description": "Path for HTTP/2 requests",
                    "type": "string"
                },
                "readIdleTimeout": {
                    "description": "New",
                    "type": "integer"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.HeaderObject": {
            "type": "object",
            "properties": {
                "request": {
                    "description": "Used if type is \"http\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.RequestConfig"
                        }
                    ]
                },
                "response": {
                    "description": "Used if type is \"http\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ResponseConfig"
                        }
                    ]
                },
                "type": {
                    "description": "\"none\", \"http\", \"srtp\", \"utp\", \"wechat-video\", \"dtls\", \"wireguard\"",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.InboundObject": {
            "type": "object",
            "properties": {
                "allocate": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.AllocateObject"
                },
                "listen": {
                    "type": "string"
                },
                "port": {
                    "description": "int or string like \"1000-2000\""
                },
                "protocol": {
                    "description": "e.g., \"vmess\", \"vless\", \"trojan\", \"socks\", \"http\"",
                    "type": "string"
                },
                "settings": {
                    "description": "Protocol-specific settings",
                    "type": "object",
                    "additionalProperties": true
                },
                "sniffing": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SniffingObject"
                },
                "streamSettings": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.StreamSettingsObject"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.KCPSettings": {
            "type": "object",
            "properties": {
                "congestion": {
                    "type": "boolean"
                },
                "downlinkCapacity": {
                    "type": "integer"
                },
                "header": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.HeaderObject"
                },
                "mtu": {
                    "type": "integer"
                },
                "readBufferSize": {
                    "type": "integer"
                },
                "seed": {
                    "type": "string"
                },
                "tti": {
                    "type": "integer"
                },
                "uplinkCapacity": {
                    "type": "integer"
                },
                "writeBufferSize": {
                    "type": "integer"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.LevelPolicy": {
            "type": "object",
            "properties": {
                "bufferSize": {
                    "description": "Buffer size in KB. 0 for default Xray buffer. -1 for no buffer (direct copy).",
                    "type": "integer"
                },
                "connIdle": {
                    "description": "Idle connection timeout in seconds, default 300.",
                    "type": "integer"
                },
                "downlinkOnly": {
                    "description": "Downlink only traffic duration in seconds, default 0 (disabled).",
                    "type": "integer"
                },
                "handshake": {
                    "description": "Connection handshake timeout in seconds, default 4.",
                    "type": "integer"
                },
                "maxConnections": {
                    "description": "Maximum number of connections for a user of this level, default 0 (unlimited). (Newer field)",
                    "type": "integer"
                },
                "statsUserDownlink": {
                    "description": "Enable downlink stats for users of this level, default false.",
                    "type": "boolean"
                },
                "statsUserUplink": {
                    "description": "Enable uplink stats for users of this level, default false.",
                    "type": "boolean"
                },
                "uplinkOnly": {
                    "description": "Uplink only traffic duration in seconds, default 0 (disabled).",
                    "type": "integer"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.LogObject": {
            "type": "object",
            "properties": {
                "access": {
                    "description": "Path to access log file",
                    "type": "string"
                },
                "dnsLog": {
                    "description": "Enable DNS log",
                    "type": "boolean"
                },
                "error": {
                    "description": "Path to error log file",
                    "type": "string"
                },
                "loglevel": {
                    "description": "\"debug\", \"info\", \"warning\", \"error\", \"none\"",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.MetricsObject": {
            "type": "object",
            "properties": {
                "listen": {
                    "description": "Optional, address to listen on (Prometheus format)",
                    "type": "string"
                },
                "port": {
                    "description": "Optional, port to listen on (Prometheus format)",
                    "type": "integer"
                },
                "tag": {
                    "description": "Required",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.MuxObject": {
            "type": "object",
            "properties": {
                "concurrency": {
                    "description": "1-1024, default 8",
                    "type": "integer"
                },
                "enabled": {
                    "description": "Default false",
                    "type": "boolean"
                },
                "padding": {
                    "description": "New in v1.8.4, enable padding for mux frames",
                    "type": "boolean"
                },
                "xudpConcurrency": {
                    "description": "For QUIC, default 8",
                    "type": "integer"
                },
                "xudpProxyUDP443": {
                    "description": "\"disabled\", \"skip\", \"prefer\" (for QUIC)",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.ObservatoryObject": {
            "type": "object",
            "properties": {
                "probeInterval": {
                    "description": "Required, duration string e.g. \"10m\", \"1h\"",
                    "type": "string"
                },
                "probeURL": {
                    "description": "Required",
                    "type": "string"
                },
                "subjectSelector": {
                    "description": "Required",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.OutboundObject": {
            "type": "object",
            "properties": {
                "mux": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.MuxObject"
                },
                "protocol": {
                    "description": "e.g., \"vmess\", \"vless\", \"freedom\", \"blackhole\"",
                    "type": "string"
                },
                "proxySettings": {
                    "description": "For daisy-chaining",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ProxySettings"
                        }
                    ]
                },
                "sendThrough": {
                    "description": "IP address to send traffic through",
                    "type": "string"
                },
                "settings": {
                    "description": "Protocol-specific settings",
                    "type": "object",
                    "additionalProperties": true
                },
                "streamSettings": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.StreamSettingsObject"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.PolicyObject": {
            "type": "object",
            "properties": {
                "levels": {
                    "description": "Key is user level as string (e.g., \"0\", \"1\")",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.LevelPolicy"
                    }
                },
                "system": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SystemPolicy"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.Portal": {
            "type": "object",
            "properties": {
                "domain": {
                    "description": "Required, or use `domains` for multiple subdomains",
                    "type": "string"
                },
                "tag": {
                    "description": "Required",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.ProxySettings": {
            "type": "object",
            "properties": {
                "tag": {
                    "description": "Tag of another outbound to use as transport proxy",
                    "type": "string"
                },
                "transportLayer": {
                    "description": "VLESS specific, handle proxying at transport layer",
                    "type": "boolean"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.QUICSettings": {
            "type": "object",
            "properties": {
                "header": {
                    "description": "Header obfuscation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.HeaderObject"
                        }
                    ]
                },
                "key": {
                    "type": "string"
                },
                "security": {
                    "description": "\"none\", \"aes-128-gcm\", \"chacha20-poly1305\"",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.RealitySettingsObject": {
            "type": "object",
            "properties": {
                "dest": {
                    "description": "Destination server address and port, e.g., \"example.com:443\"",
                    "type": "string"
                },
                "maxClientVer": {
                    "description": "Maximum client Xray version",
                    "type": "string"
                },
                "maxTimeDiff": {
                    "description": "Max time difference in ms, default 0 (disabled)",
                    "type": "integer"
                },
                "minClientVer": {
                    "description": "Minimum client Xray version, e.g., \"1.8.0\"",
                    "type": "string"
                },
                "privateKey": {
                    "description": "Base64 encoded private key (generated by `xray x25519`)",
                    "type": "string"
                },
                "serverNames": {
                    "description": "List of server names to mimic",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "shortIds": {
                    "description": "List of short IDs (0-15 byte hex strings)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "show": {
                    "description": "If true, REALITY debug info will be shown in log",
                    "type": "boolean"
                },
                "spiderX": {
                    "description": "Path for crawling destination server, default \"/\"",
                    "type": "string"
                },
                "xver": {
                    "description": "Proxy version, 0 or 1. Default 0.",
                    "type": "integer"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.RequestConfig": {
            "type": "object",
            "properties": {
                "headers": {
                    "description": "Value can be string or []string",
                    "type": "object",
                    "additionalProperties": true
                },
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.ResponseConfig": {
            "type": "object",
            "properties": {
                "headers": {
                    "description": "Value can be string or []string",
                    "type": "object",
                    "additionalProperties": true
                },
                "reason": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.ReverseObject": {
            "type": "object",
            "properties": {
                "bridges": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.Bridge"
                    }
                },
                "portals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.Portal"
                    }
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.RoutingObject": {
            "type": "object",
            "properties": {
                "balancers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.Balancer"
                    }
                },
                "domainMatcher": {
                    "description": "\"linear\", \"mph\" (new)",
                    "type": "string"
                },
                "domainStrategy": {
                    "description": "\"AsIs\", \"IPIfNonMatch\", \"IPOnDemand\", \"IPIfNonMatchElseAsIs\"",
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.RoutingRule"
                    }
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.RoutingRule": {
            "type": "object",
            "properties": {
                "attrs": {
                    "description": "HTTP attributes matching",
                    "type": "string"
                },
                "balancerTag": {
                    "description": "Target balancer tag",
                    "type": "string"
                },
                "domain": {
                    "description": "Domains to match",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domainMatcher": {
                    "description": "\"linear\", \"mph\" (per rule)",
                    "type": "string"
                },
                "enabled": {
                    "description": "New: enable/disable rule",
                    "type": "boolean"
                },
                "inboundTag": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ip": {
                    "description": "Source/Destination IPs or CIDRs to match",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "network": {
                    "description": "\"tcp\", \"udp\", or \"tcp,udp\"",
                    "type": "string"
                },
                "outboundTag": {
                    "description": "Target outbound tag",
                    "type": "string"
                },
                "port": {
                    "description": "Destination port, e.g., \"53\", \"1000-2000\", 443",
                    "type": "string"
                },
                "protocol": {
                    "description": "\"http\", \"tls\", \"bittorrent\", \"dtls\" (new)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "description": "Source IPs or CIDRs",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sourcePort": {
                    "description": "Source port, e.g., \"53\", \"1000-2000\", 12345 (New)",
                    "type": "string"
                },
                "targetAddress": {
                    "description": "Target address (domain or IP, New)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "targetPort": {
                    "description": "Target port (New, complements Port which is often destination)",
                    "type": "string"
                },
                "targetUser": {
                    "description": "Target user (New)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "Default \"field\"",
                    "type": "string"
                },
                "user": {
                    "description": "User emails for authentication based routing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxCertificate": {
            "type": "object",
            "properties": {
                "certificate": {
                    "description": "PEM format certificate chain (list of strings)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "certificate_path": {
                    "description": "Path to PEM certificate chain file",
                    "type": "string"
                },
                "key": {
                    "description": "PEM format private key (list of strings)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "key_path": {
                    "description": "Path to PEM private key file",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxConfig": {
            "type": "object",
            "properties": {
                "certificate": {
                    "description": "List of certificate objects",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxCertificate"
                    }
                },
                "createdAt": {
                    "type": "string",
                    "example": "2023-01-02T10:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Experimental Sing-box setup"
                },
                "dns": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSConfig"
                },
                "endpoints": {
                    "description": "Generic map for various endpoint types",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "experimental": {
                    "type": "object",
                    "additionalProperties": true
                },
                "id": {
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "inbounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxInbound"
                    }
                },
                "log": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxLogConfig"
                },
                "name": {
                    "type": "string",
                    "example": "My SingBox Test"
                },
                "ntp": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxNTPConfig"
                },
                "outbounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxOutbound"
                    }
                },
                "route": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxRouteConfig"
                },
                "services": {
                    "description": "Generic map for various service types",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2023-01-02T11:00:00Z"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSConfig": {
            "type": "object",
            "properties": {
                "cache_capacity": {
                    "description": "New in 1.11.0",
                    "type": "integer"
                },
                "client_subnet": {
                    "description": "Global client_subnet default",
                    "type": "string"
                },
                "disable_cache": {
                    "type": "boolean"
                },
                "disable_expire": {
                    "type": "boolean"
                },
                "fakeip": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxFakeIPConfig"
                },
                "final": {
                    "description": "Tag of final DNS server",
                    "type": "string"
                },
                "hosts": {
                    "description": "domain: IP or IP array",
                    "type": "object",
                    "additionalProperties": true
                },
                "independent_cache": {
                    "type": "boolean"
                },
                "reverse_mapping": {
                    "type": "boolean"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSRule"
                    }
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSServer"
                    }
                },
                "strategy": {
                    "description": "Default DNS strategy: \"prefer_ipv4\", \"prefer_ipv6\", \"ipv4_only\", \"ipv6_only\"",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSDhcpServerSettings": {
            "type": "object",
            "properties": {
                "interface": {
                    "description": "\"auto\" or specific interface name like \"en0\"",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSHTTPSettings": {
            "type": "object",
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "method": {
                    "description": "\"GET\" or \"POST\"",
                    "type": "string"
                },
                "path": {
                    "description": "Defaults to \"/dns-query\"",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSHostsServerSettings": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Inline hosts data, domain: IP or []IP",
                    "type": "object",
                    "additionalProperties": true
                },
                "format": {
                    "description": "\"plain_text\", \"domain_set\"",
                    "type": "string"
                },
                "path": {
                    "description": "Path to hosts file",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSQUICSettings": {
            "type": "object",
            "properties": {
                "initial_packet_length": {
                    "description": "Default 1200",
                    "type": "integer"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSRule": {
            "type": "object",
            "properties": {
                "auth_user": {
                    "description": "Matching fields",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "clash_mode": {
                    "description": "\"global\", \"rule\", \"direct\"",
                    "type": "string"
                },
                "client_subnet": {
                    "description": "Override client subnet for this rule",
                    "type": "string"
                },
                "default": {
                    "description": "New in 1.9, matches if no other rule matched",
                    "type": "boolean"
                },
                "disable_cache": {
                    "description": "Disable DNS cache for this rule",
                    "type": "boolean"
                },
                "domain": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domain_keyword": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domain_regex": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domain_suffix": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "executable": {
                    "description": "New in 1.9",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "geoip": {
                    "description": "Country code",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "geosite": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inbound": {
                    "description": "Inbound tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "invert": {
                    "type": "boolean"
                },
                "ip_cidr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ip_version": {
                    "description": "0, 4, 6",
                    "type": "integer"
                },
                "mode": {
                    "description": "For \"logical\" rules",
                    "type": "string"
                },
                "network": {
                    "description": "\"tcp\", \"udp\"",
                    "type": "string"
                },
                "outbound": {
                    "description": "Tag of an outbound (becomes a DNS transport)",
                    "type": "string"
                },
                "package_name": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "port": {
                    "description": "Port or port range string, e.g., \"53\", \"1000-2000\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "port_range": {
                    "description": "Deprecated by \"port\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "process_name": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "process_path": {
                    "description": "New in 1.9",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "protocol": {
                    "description": "\"tls\", \"http\", \"quic\", \"ssh\", \"stun\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "query_type": {
                    "description": "\"A\", \"AAAA\", \"CNAME\", \"MX\", \"TXT\", \"ANY\", etc. or numeric",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rewrite_ttl": {
                    "description": "Rewrite TTL for matched queries",
                    "type": "integer"
                },
                "rule_set": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rules": {
                    "description": "Nested rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSRule"
                    }
                },
                "server": {
                    "description": "Action fields (mutually exclusive, only one should be set)",
                    "type": "string"
                },
                "source_geoip": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source_ip_cidr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source_port": {
                    "description": "Port or port range string",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source_port_range": {
                    "description": "Deprecated by \"source_port\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "description": "For \"logical\" rules: \"logical\"",
                    "type": "string"
                },
                "user": {
                    "description": "New in 1.9",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "wifi_bssid": {
                    "description": "New in 1.9",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "wifi_ssid": {
                    "description": "New in 1.9",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSServer": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "--- Legacy Fields (used if type is empty or \"legacy\") ---",
                    "type": "string"
                },
                "address_resolver": {
                    "description": "Legacy: tag of another DNS server",
                    "type": "string"
                },
                "address_strategy": {
                    "description": "Legacy: \"prefer_ipv4\", \"prefer_ipv6\", \"ipv4_only\", \"ipv6_only\"",
                    "type": "string"
                },
                "bind_interface": {
                    "type": "string"
                },
                "client_subnet": {
                    "description": "This can be set per-server, overriding global.",
                    "type": "string"
                },
                "connect_timeout": {
                    "description": "duration string",
                    "type": "string"
                },
                "detour": {
                    "type": "string"
                },
                "dhcp": {
                    "description": "For type: \"dhcp\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSDhcpServerSettings"
                        }
                    ]
                },
                "domain_resolver": {
                    "description": "string or object"
                },
                "fallback_delay": {
                    "description": "duration string",
                    "type": "string"
                },
                "fallback_network_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hosts": {
                    "description": "For type: \"hosts\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSHostsServerSettings"
                        }
                    ]
                },
                "http": {
                    "description": "For types: \"https\", \"http3\" (DoH/DoH3)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSHTTPSettings"
                        }
                    ]
                },
                "inet4_bind_address": {
                    "type": "string"
                },
                "inet6_bind_address": {
                    "type": "string"
                },
                "netns": {
                    "type": "string"
                },
                "network_strategy": {
                    "type": "string"
                },
                "network_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "quic": {
                    "description": "For types: \"quic\", \"http3\" (underlying QUIC transport)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSQUICSettings"
                        }
                    ]
                },
                "reuse_addr": {
                    "type": "boolean"
                },
                "routing_mark": {
                    "description": "int or hex string"
                },
                "server": {
                    "description": "--- Fields for New Typed Servers (UDP, TCP, TLS, HTTPS, QUIC, HTTP3) ---",
                    "type": "string"
                },
                "server_port": {
                    "description": "New: Server port",
                    "type": "integer"
                },
                "strategy": {
                    "description": "Legacy: Default domain strategy for this server. Also a global DNS config field.",
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "tcp_fast_open": {
                    "type": "boolean"
                },
                "tcp_multi_path": {
                    "type": "boolean"
                },
                "tls": {
                    "description": "--- Type-Specific Settings ---",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSTLSSettings"
                        }
                    ]
                },
                "type": {
                    "description": "\"udp\", \"tcp\", \"tls\", \"https\", \"http3\", \"quic\", \"local\", \"hosts\", \"dhcp\", \"fakeip\", \"resolved\", \"tailscale\", or empty for legacy (deprecated)",
                    "type": "string"
                },
                "udp_fragment": {
                    "type": "boolean"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxDNSTLSSettings": {
            "type": "object",
            "properties": {
                "alpn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "certificate": {
                    "description": "PEM format client certificate chain",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "certificate_path": {
                    "description": "Path to client certificate chain file",
                    "type": "string"
                },
                "cipher_suites": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disable_sni": {
                    "type": "boolean"
                },
                "ech": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxECHConfig"
                },
                "insecure": {
                    "type": "boolean"
                },
                "key": {
                    "description": "PEM format client private key",
                    "type": "string"
                },
                "key_path": {
                    "description": "Path to client private key file",
                    "type": "string"
                },
                "max_version": {
                    "type": "string"
                },
                "min_version": {
                    "description": "e.g., \"tls1.2\", \"tls1.3\"",
                    "type": "string"
                },
                "server_name": {
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxDialFields": {
            "type": "object",
            "properties": {
                "bind_interface": {
                    "type": "string"
                },
                "connect_timeout": {
                    "description": "duration string",
                    "type": "string"
                },
                "detour": {
                    "type": "string"
                },
                "domain_resolver": {
                    "description": "string or object"
                },
                "fallback_delay": {
                    "description": "duration string",
                    "type": "string"
                },
                "fallback_network_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inet4_bind_address": {
                    "type": "string"
                },
                "inet6_bind_address": {
                    "type": "string"
                },
                "netns": {
                    "type": "string"
                },
                "network_strategy": {
                    "type": "string"
                },
                "network_type": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "reuse_addr": {
                    "type": "boolean"
                },
                "routing_mark": {
                    "description": "int or hex string"
                },
                "tcp_fast_open": {
                    "type": "boolean"
                },
                "tcp_multi_path": {
                    "type": "boolean"
                },
                "udp_fragment": {
                    "type": "boolean"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxECHConfig": {
            "type": "object",
            "properties": {
                "config_encoded": {
                    "description": "Base64 encoded ECHKeyContents",
                    "type": "string"
                },
                "config_path": {
                    "description": "Path to ECHKeyContents",
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "pq_signature_schemes_enabled": {
                    "type": "boolean"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxFakeIPConfig": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "excluded_domain": {
                    "description": "New in 1.9",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "excluded_domain_file": {
                    "description": "New in 1.9, path to file",
                    "type": "string"
                },
                "http_timeout": {
                    "description": "Duration string, default 10s",
                    "type": "string"
                },
                "inet4_mask": {
                    "description": "New in 1.9, alternative to inet4_range",
                    "type": "string"
                },
                "inet4_range": {
                    "description": "CIDR, e.g., \"198.18.0.0/15\"",
                    "type": "string"
                },
                "inet6_mask": {
                    "description": "New in 1.9, alternative to inet6_range",
                    "type": "string"
                },
                "inet6_range": {
                    "description": "CIDR, e.g., \"fc00::/18\"",
                    "type": "string"
                },
                "store": {
                    "description": "New in 1.9, \"memory\" (default) or \"bolt\"",
                    "type": "string"
                },
                "store_path": {
                    "description": "New in 1.9, path for \"bolt\" store",
                    "type": "string"
                },
                "udp_timeout": {
                    "description": "Duration string, default 10s",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxInbound": {
            "type": "object",
            "properties": {
                "bind_interface": {
                    "type": "string"
                },
                "domain_strategy": {
                    "description": "\"prefer_ipv4\", \"prefer_ipv6\", etc.",
                    "type": "string"
                },
                "inet4_bind_address": {
                    "type": "string"
                },
                "inet6_bind_address": {
                    "type": "string"
                },
                "listen": {
                    "type": "string"
                },
                "listen_port": {
                    "type": "integer"
                },
                "netns": {
                    "description": "New in 1.12",
                    "type": "string"
                },
                "proxy_protocol": {
                    "description": "PROXY protocol version: 0 (disable), 1, 2",
                    "type": "integer"
                },
                "reuse_addr": {
                    "type": "boolean"
                },
                "routing_mark": {
                    "description": "int or hex string"
                },
                "settings": {
                    "description": "Protocol-specific settings, TLS, and Transport settings are kept generic for now.",
                    "type": "object",
                    "additionalProperties": true
                },
                "sniff": {
                    "type": "boolean"
                },
                "sniff_override_destination": {
                    "type": "boolean"
                },
                "sniff_timeout": {
                    "description": "Duration string",
                    "type": "string"
                },
                "tag": {
                    "description": "Unique tag for this inbound",
                    "type": "string"
                },
                "tcp_fast_open": {
                    "type": "boolean"
                },
                "tls": {
                    "description": "TLS settings object, see shared/tls",
                    "type": "object",
                    "additionalProperties": true
                },
                "transport": {
                    "description": "Transport settings object, see shared/v2ray-transport",
                    "type": "object",
                    "additionalProperties": true
                },
                "type": {
                    "description": "Protocol type, e.g., \"mixed\", \"socks\", \"http\", \"vmess\", etc.",
                    "type": "string"
                },
                "udp_fragment": {
                    "description": "Deprecated in 1.9, use udp_mtu",
                    "type": "boolean"
                },
                "udp_mtu": {
                    "description": "New in 1.9",
                    "type": "integer"
                },
                "udp_timeout": {
                    "description": "Duration string",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxLogConfig": {
            "type": "object",
            "properties": {
                "disabled": {
                    "type": "boolean"
                },
                "level": {
                    "description": "e.g., \"trace\", \"debug\", \"info\", \"warn\", \"error\", \"fatal\", \"panic\"",
                    "type": "string"
                },
                "output": {
                    "description": "file path",
                    "type": "string"
                },
                "timestamp": {
                    "type": "boolean"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxNTPConfig": {
            "type": "object",
            "properties": {
                "detour": {
                    "description": "Outbound tag for NTP requests (legacy, part of dial_fields now but often shown standalone)",
                    "type": "string"
                },
                "dial_fields": {
                    "description": "New in 1.12 for extended dial options",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxDialFields"
                        }
                    ]
                },
                "enabled": {
                    "type": "boolean"
                },
                "interval": {
                    "description": "Duration string, default: \"1h\"",
                    "type": "string"
                },
                "server": {
                    "description": "Default: \"time.apple.com\"",
                    "type": "string"
                },
                "server_port": {
                    "description": "Default: 123",
                    "type": "integer"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxOutbound": {
            "type": "object",
            "properties": {
                "multiplex": {
                    "description": "Multiplex settings object",
                    "type": "object",
                    "additionalProperties": true
                },
                "settings": {
                    "description": "Protocol-specific settings",
                    "type": "object",
                    "additionalProperties": true
                },
                "tag": {
                    "type": "string"
                },
                "tls": {
                    "description": "TLS settings object",
                    "type": "object",
                    "additionalProperties": true
                },
                "transport": {
                    "description": "Transport settings object",
                    "type": "object",
                    "additionalProperties": true
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxRouteConfig": {
            "type": "object",
            "properties": {
                "auto_detect_interface": {
                    "description": "Default: true",
                    "type": "boolean"
                },
                "default_domain_resolver": {
                    "description": "Tag of a DNS server (New in 1.12)",
                    "type": "string"
                },
                "default_interface": {
                    "description": "Default physical outbound interface",
                    "type": "string"
                },
                "default_mark": {
                    "description": "SO_MARK for outbound packets",
                    "type": "integer"
                },
                "domain_strategy": {
                    "description": "\"prefer_ipv4\", \"prefer_ipv6\", \"ipv4_only\", \"ipv6_only\", \"asio\" (deprecated), UseIP (Xray term?)",
                    "type": "string"
                },
                "final": {
                    "description": "Default outbound tag",
                    "type": "string"
                },
                "geoip": {
                    "description": "GeoIP configuration object",
                    "type": "object",
                    "additionalProperties": true
                },
                "geosite": {
                    "description": "Geosite configuration object",
                    "type": "object",
                    "additionalProperties": true
                },
                "independent_cache": {
                    "description": "For rule_set matching result cache (New in 1.9)",
                    "type": "boolean"
                },
                "override_android_vpn": {
                    "description": "Default: true",
                    "type": "boolean"
                },
                "rule_set": {
                    "description": "List of RuleSet objects",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxRouteRule"
                    }
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SingBoxRouteRule": {
            "type": "object",
            "properties": {
                "auth_user": {
                    "description": "--- Matching fields ---",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "balancer": {
                    "description": "Tag of a balancer outbound to use (New in 1.9)",
                    "type": "string"
                },
                "clash_mode": {
                    "description": "\"global\", \"rule\", \"direct\"",
                    "type": "string"
                },
                "default": {
                    "description": "New in 1.9, matches if no other preceding rule matched",
                    "type": "boolean"
                },
                "domain": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domain_keyword": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domain_regex": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domain_suffix": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "email": {
                    "description": "New in 1.9",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "executable": {
                    "description": "New in 1.9",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "geoip": {
                    "description": "Country code, e.g., \"CN\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "geosite": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "inbound": {
                    "description": "string or []string of inbound tags"
                },
                "invert": {
                    "type": "boolean"
                },
                "ip_cidr": {
                    "description": "Renamed from 'ip'",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ip_version": {
                    "description": "0 (any), 4, 6",
                    "type": "integer"
                },
                "mode": {
                    "description": "\"and\" or \"or\"",
                    "type": "string"
                },
                "network": {
                    "description": "string or []string: \"tcp\", \"udp\""
                },
                "notes": {
                    "description": "New in 1.9 (comment field, not for matching)",
                    "type": "string"
                },
                "outbound": {
                    "description": "--- Action fields (only one of these should be set per rule) ---",
                    "type": "string"
                },
                "package_name": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "port": {
                    "description": "string, int, or list of these (e.g., \"80\", 443, \"1000-2000\")"
                },
                "process_name": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "process_path": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "protocol": {
                    "description": "string or []string: \"tls\", \"http\", \"quic\", \"ssh\", \"stun\", etc."
                },
                "rule_set": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "rules": {
                    "description": "Nested rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SingBoxRouteRule"
                    }
                },
                "source_geoip": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source_ip_cidr": {
                    "description": "Renamed from 'source_ip'",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source_port": {
                    "description": "string, int, or list of these"
                },
                "type": {
                    "description": "--- For \"logical\" rules ---",
                    "type": "string"
                },
                "user": {
                    "description": "New in 1.9",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "wifi_bssid": {
                    "description": "New in 1.9",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "wifi_ssid": {
                    "description": "New in 1.9",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SniffingObject": {
            "type": "object",
            "properties": {
                "appProtocol": {
                    "description": "New in v1.8.7, for application layer protocol sniffing",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "appProtocolPort": {
                    "description": "New in v1.8.7, port range for app protocol sniffing",
                    "type": "string"
                },
                "destOverride": {
                    "description": "\"http\", \"tls\", \"fakedns\", \"quic\" (new)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domainsExcluded": {
                    "description": "New",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enabled": {
                    "description": "Default true if object exists",
                    "type": "boolean"
                },
                "metadataOnly": {
                    "description": "New, for fakedns to sniff SNI/ALPN only",
                    "type": "boolean"
                },
                "routeOnly": {
                    "description": "New, if true, sniffing result is only for routing",
                    "type": "boolean"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SocketOptions": {
            "type": "object",
            "properties": {
                "acceptProxyProtocol": {
                    "type": "boolean"
                },
                "dialerProxy": {
                    "description": "Tag of an outbound proxy",
                    "type": "string"
                },
                "domainStrategy": {
                    "description": "\"UseIP\", \"UseIPv4\", \"UseIPv6\", \"AsIs\"",
                    "type": "string"
                },
                "interface": {
                    "description": "Bind to a specific network interface",
                    "type": "string"
                },
                "mark": {
                    "description": "SO_MARK",
                    "type": "integer"
                },
                "tcpCongestion": {
                    "description": "TCP congestion control algorithm",
                    "type": "string"
                },
                "tcpFastOpen": {
                    "description": "TCP Fast Open queue length",
                    "type": "integer"
                },
                "tcpKeepAliveIdle": {
                    "description": "TCP_KEEPIDLE (seconds)",
                    "type": "integer"
                },
                "tcpKeepAliveInterval": {
                    "description": "TCP_KEEPINTVL (seconds)",
                    "type": "integer"
                },
                "tcpMptcp": {
                    "description": "TCP MPTCP",
                    "type": "boolean"
                },
                "tcpNoDelay": {
                    "description": "TCP_NODELAY",
                    "type": "boolean"
                },
                "tcpUserTimeout": {
                    "description": "New, TCP_USER_TIMEOUT (milliseconds)",
                    "type": "integer"
                },
                "tproxy": {
                    "description": "\"redirect\", \"tproxy\", \"off\"",
                    "type": "string"
                },
                "udpReusable": {
                    "description": "New, SO_REUSEADDR for UDP",
                    "type": "boolean"
                },
                "udpTimeout": {
                    "description": "New, timeout for UDP connections in seconds",
                    "type": "integer"
                },
                "v6only": {
                    "description": "IPV6_V6ONLY",
                    "type": "boolean"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.StatsObject": {
            "type": "object"
        },
        "github_com_tools4net_ezfw_backend_internal_models.StreamSettingsObject": {
            "type": "object",
            "properties": {
                "dsSettings": {
                    "description": "Domain Socket settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.DomainSocketSettings"
                        }
                    ]
                },
                "grpcSettings": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.GRPCSettings"
                },
                "httpSettings": {
                    "description": "For HTTP/2",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.HTTP2Settings"
                        }
                    ]
                },
                "kcpSettings": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.KCPSettings"
                },
                "network": {
                    "description": "\"tcp\", \"kcp\", \"ws\", \"http\" (HTTP/2), \"domainsocket\", \"quic\", \"grpc\"",
                    "type": "string"
                },
                "quicSettings": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.QUICSettings"
                },
                "security": {
                    "description": "\"none\", \"tls\", \"xtls\", \"reality\"",
                    "type": "string"
                },
                "sockopt": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SocketOptions"
                },
                "tcpSettings": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.TCPSettings"
                },
                "tlsSettings": {
                    "description": "Used for security: \"tls\" or \"reality\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.TLSSettings"
                        }
                    ]
                },
                "wsSettings": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.WSSettings"
                },
                "xtlsSettings": {
                    "description": "Used for security: \"xtls\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.XTLSSettings"
                        }
                    ]
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.SystemPolicy": {
            "type": "object",
            "properties": {
                "overrideAccessLogAddress": {
                    "description": "Override inbound's access log address with Xray's address. (Newer field)",
                    "type": "boolean"
                },
                "overrideAccessLogPort": {
                    "description": "Override inbound's access log port with Xray's port. (Newer field)",
                    "type": "boolean"
                },
                "statsInboundDownlink": {
                    "description": "Enable downlink stats for all inbounds, default false.",
                    "type": "boolean"
                },
                "statsInboundUplink": {
                    "description": "Enable uplink stats for all inbounds, default false.",
                    "type": "boolean"
                },
                "statsOutboundDownlink": {
                    "description": "Enable downlink stats for all outbounds, default false.",
                    "type": "boolean"
                },
                "statsOutboundUplink": {
                    "description": "Enable uplink stats for all outbounds, default false.",
                    "type": "boolean"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.TCPSettings": {
            "type": "object",
            "properties": {
                "acceptProxyProtocol": {
                    "description": "For HAProxy's PROXY protocol",
                    "type": "boolean"
                },
                "congestion": {
                    "description": "Corresponds to sockopt TCP_CONGESTION. Often set here.",
                    "type": "string"
                },
                "header": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.HeaderObject"
                },
                "tcpKeepAliveInterval": {
                    "description": "Corresponds to sockopt TCP_KEEPINTVL. Often set here.",
                    "type": "integer"
                },
                "tcpNoDelay": {
                    "description": "Corresponds to sockopt TCP_NODELAY. Often set here for convenience.",
                    "type": "boolean"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.TLSSettings": {
            "type": "object",
            "properties": {
                "allowInsecure": {
                    "type": "boolean"
                },
                "alpn": {
                    "description": "e.g., \"http/1.1\", \"h2\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "certificates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.Certificate"
                    }
                },
                "cipherSuites": {
                    "description": "Colon-separated list",
                    "type": "string"
                },
                "disableSystemRoot": {
                    "description": "Default false",
                    "type": "boolean"
                },
                "enableSessionResumption": {
                    "description": "Default false",
                    "type": "boolean"
                },
                "fingerprint": {
                    "description": "\"chrome\", \"firefox\", \"safari\", \"ios\", \"android\", \"edge\", \"360\", \"qq\", \"random\", \"randomized\"",
                    "type": "string"
                },
                "masterKeyLog": {
                    "description": "New, path to log TLS master key",
                    "type": "string"
                },
                "maxVersion": {
                    "type": "string"
                },
                "minVersion": {
                    "description": "\"1.0\", \"1.1\", \"1.2\", \"1.3\"",
                    "type": "string"
                },
                "pinnedPeerCertificateChainSha256": {
                    "description": "New",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "realitySettings": {
                    "description": "New, for security: \"reality\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.RealitySettingsObject"
                        }
                    ]
                },
                "rejectUnknownSni": {
                    "description": "New, default false",
                    "type": "boolean"
                },
                "serverName": {
                    "description": "SNI",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.TransportObject": {
            "type": "object",
            "properties": {
                "dsSettings": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.DomainSocketSettings"
                },
                "grpcSettings": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.GRPCSettings"
                },
                "httpSettings": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.HTTP2Settings"
                },
                "kcpSettings": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.KCPSettings"
                },
                "quicSettings": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.QUICSettings"
                },
                "sockopt": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.SocketOptions"
                },
                "tcpSettings": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.TCPSettings"
                },
                "wsSettings": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.WSSettings"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.WSSettings": {
            "type": "object",
            "properties": {
                "acceptProxyProtocol": {
                    "type": "boolean"
                },
                "earlyDataHeaderName": {
                    "description": "New",
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "maxEarlyData": {
                    "description": "New",
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "useBrowserForwarding": {
                    "description": "New, default false",
                    "type": "boolean"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.XTLSSettings": {
            "type": "object",
            "properties": {
                "allowInsecure": {
                    "type": "boolean"
                },
                "alpn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "certificates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.Certificate"
                    }
                },
                "cipherSuites": {
                    "type": "string"
                },
                "disableSystemRoot": {
                    "description": "Default false",
                    "type": "boolean"
                },
                "fingerprint": {
                    "description": "Not typically used with XTLS server-side",
                    "type": "string"
                },
                "maxVersion": {
                    "type": "string"
                },
                "minVersion": {
                    "description": "\"1.0\", \"1.1\", \"1.2\", \"1.3\"",
                    "type": "string"
                },
                "pinnedPeerCertificateChainSha256": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serverName": {
                    "description": "SNI",
                    "type": "string"
                }
            }
        },
        "github_com_tools4net_ezfw_backend_internal_models.XrayConfig": {
            "type": "object",
            "properties": {
                "api": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.APIObject"
                },
                "burstObservatory": {
                    "description": "Project X specific",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.BurstObservatoryObject"
                        }
                    ]
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Main Xray server configuration"
                },
                "dns": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.DNSObject"
                },
                "fakedns": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.FakeDNSObject"
                },
                "id": {
                    "description": "Internal ID for database",
                    "type": "string",
                    "example": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
                },
                "inbounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.InboundObject"
                    }
                },
                "log": {
                    "description": "Core Xray configuration fields",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.LogObject"
                        }
                    ]
                },
                "metrics": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.MetricsObject"
                },
                "name": {
                    "description": "User-defined name for the config",
                    "type": "string",
                    "example": "My Default Xray Config"
                },
                "observatory": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ObservatoryObject"
                },
                "outbounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.OutboundObject"
                    }
                },
                "policy": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.PolicyObject"
                },
                "reverse": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.ReverseObject"
                },
                "routing": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.RoutingObject"
                },
                "services": {
                    "description": "New, for pluggable services",
                    "type": "object",
                    "additionalProperties": true
                },
                "stats": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.StatsObject"
                },
                "transport": {
                    "$ref": "#/definitions/github_com_tools4net_ezfw_backend_internal_models.TransportObject"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-01-01T13:00:00Z"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API Key for authentication. Prepend with \"Bearer \" if it's a bearer token, otherwise just the key. For this API, just the key is expected.",
            "type": "apiKey",
            "name": "X-API-Key",
            "in": "header"
        }
    }
}